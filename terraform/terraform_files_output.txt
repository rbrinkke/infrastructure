2024-12-18 10:10:50
/home/rob/repos/infrastructure/terraform/logging/loki.tf
----------------------------------------
# logging/loki.tf

data "template_file" "loki" {
  template = file("${path.module}/templates/loki-config.tpl")
  vars = {
    retention_period = var.retention_period
  }
}

resource "local_file" "loki_config_generated" {
  # We schrijven de gegenereerde config rechtstreeks in de logging-config directory.
  filename = "${var.infrastructure_base_path}/logging-config/loki-config.yaml"
  content  = data.template_file.loki.rendered
}

resource "docker_container" "loki" {
  name  = "loki"
  image = "grafana/loki:latest"

  command = ["--config.file=/etc/loki/config.yaml"]

  volumes {
    host_path      = local_file.loki_config_generated.filename
    container_path = "/etc/loki/config.yaml"
    read_only      = true
  }

  volumes {
    host_path      = "${var.infrastructure_base_path}/loki-data"
    container_path = "/loki"
  }

  ports {
    internal = 3100
    external = 3100
  }

  labels {
    label = "traefik.enable"
    value = "true"
  }

  labels {
    label = "traefik.http.routers.loki.rule"
    value = "Host(`loki.example.com`)"
  }

  labels {
    label = "traefik.http.routers.loki.entrypoints"
    value = "https"
  }

  labels {
    label = "traefik.http.routers.loki.tls"
    value = "true"
  }

  labels {
    label = "traefik.http.services.loki.loadbalancer.server.port"
    value = "3100"
  }

  networks_advanced {
    name = var.monitoring_network
  }

  networks_advanced {
    name = var.traefik_network
  }

  networks_advanced {
    name = var.logging_network
  }

  restart = "unless-stopped"

  healthcheck {
    test         = ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
    interval     = "30s"
    timeout      = "5s"
    retries      = 3
    start_period = "30s"
  }

  depends_on = [
    local_file.loki_config_generated
  ]
}


2024-12-18 10:10:50
/home/rob/repos/infrastructure/terraform/logging/promtail.tf
----------------------------------------
# logging/promtail.tf

data "template_file" "promtail" {
  template = file("${path.module}/templates/promtail-config.tpl")
  # Als je hier variabelen nodig hebt, kun je die net als bij Loki meegeven:
  # vars = {
  #   promtail_variable = var.promtail_variable
  # }
}

resource "local_file" "promtail_config_generated" {
  filename = "${var.infrastructure_base_path}/logging-config/promtail-config.yaml"
  content  = data.template_file.promtail.rendered
}

resource "docker_container" "promtail_service" {
  name  = "promtail"
  image = "grafana/promtail:latest"

  command = ["-config.file=/etc/promtail/config.yaml"]

  user = "root"

  volumes {
    host_path      = local_file.promtail_config_generated.filename
    container_path = "/etc/promtail/config.yaml"
    read_only      = true
  }

  volumes {
    host_path      = "/var/lib/docker/containers"
    container_path = "/var/lib/docker/containers"
    read_only      = true
  }

  volumes {
    host_path      = "/var/run/docker.sock"
    container_path = "/var/run/docker.sock"
    read_only      = true
  }

  networks_advanced {
    name = var.logging_network
  }

  networks_advanced {
    name = var.monitoring_network
  }

  networks_advanced {
    name = var.traefik_network
  }

  restart = "unless-stopped"

  healthcheck {
    test         = ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1"]
    interval     = "30s"
    timeout      = "5s"
    retries      = 3
    start_period = "30s"
  }

  depends_on = [
    docker_container.loki,
    local_file.promtail_config_generated
  ]
}


2024-12-18 10:10:50
/home/rob/repos/infrastructure/terraform/logging/variables.tf
----------------------------------------
variable "monitoring_network" {
  description = "Naam van het monitoring netwerk"
  type        = string
}

variable "traefik_network" {
  description = "Naam van het Traefik netwerk"
  type        = string
}

variable "logging_network" {
  description = "Naam van het logging netwerk"
  type        = string
}

variable "retention_period" {
  description = "Retentieperiode in uren (bijv. 168 voor 7 dagen)"
  type        = number
  default     = 168
}

variable "infrastructure_base_path" {
  type    = string
  default = "/var/lib/infrastructure"
}


2024-12-18 10:10:50
/home/rob/repos/infrastructure/terraform/logging/versions.tf
----------------------------------------
terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "~> 3.0"
    }
  }
}

